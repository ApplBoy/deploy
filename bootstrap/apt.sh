#!/bin/bash
# MIT License (c) 2025 Saulo José
R='\033[1;31m';N='\033[0m';B='\033[1m';UA="User-Agent: curl";AC="Accept: application/vnd.github+json"
type -p apt||{ printf "${R}apt não encontrado.${N}\n";exit 1;}
set -e;sudo -v||{ printf "${R}Sem sudo.${N}\n";exit 1;}
[[ $1 == -h || $1 == --help ]]&&printf "Uso: $0 [--db=mariadb-10.4,postgres-17] [--node] [--nginx] [--gh-token-docker]\n"&&exit
printf '    ____  ____  ____  _____________________  ___    ____ \n   / __ )/ __ \\/ __ \\/_  __/ ___/_  __/ __ \\/   |  / __ \\\n  / __  / / / / / / / / /  \\__ \\ / / / /_/ / /| | / /_/ /\n / /_/ / /_/ / /_/ / / /  ___/ // / / _, _/ ___ |/ ____/ \n/_____/\\____/\\____/ /_/  /____//_/ /_/ |_/_/  |_/_/\n'
for a;do [[ $a == --db=* ]]&&dbs="${a#*=}";[[ $a == --node ]]&&node=1;[[ $a == --nginx ]]&&nginx=1;[[ $a == --gh-token-docker ]]&&tokendocker=1;done
type -p gh||{ (type -p curl||sudo apt install curl -y)&&sudo mkdir -p -m 755 /etc/apt/keyrings;out=$(mktemp);curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg -o "$out";cat "$out"|sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg>/dev/null;sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg;echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"|sudo tee /etc/apt/sources.list.d/github-cli.list>/dev/null;sudo apt update;sudo apt install gh -y;}
gh config set -h github.com git_protocol https
gh auth status -h github.com>/dev/null 2>&1&&{ printf "${B}Já autenticado. Usar sessão atual? [Y/n] ${N}";read s;[[ $s =~ ^[Nn]$ ]]||skip_auth=1;}
[[ $skip_auth != 1 ]]&&while :;do printf "${B}Token GitHub: ${N}";read t;[[ $t =~ ^ghp_[A-Za-z0-9]{36,}$ ]]||{ printf "${R}Token inválido.${N}\n";continue;};a="Authorization: token $t";u=$(curl -s -H "$a" -H "$UA" -H "$AC" https://api.github.com/user|grep login|cut -d'"' -f4);[[ $u ]]||{ printf "${R}Token rejeitado.${N}\n";continue;};printf "${B}Logado como: $u${N}\n${B}Repositório: ${N}";read r;r=$(sed -E 's#(git@|https://)github.com[:/]##;s#\.git$##'<<<"$r");perms=$(curl -s -H "$a" -H "$UA" -H "$AC" https://api.github.com/repos/"$r");printf "Permissões: ";for p in pull push admin;do grep -q "\"$p\": true"<<<"$perms"&&printf "$p ";done;printf "\n${B}Corretas? [y/N] ${N}";read y;[[ $y =~ ^[Yy]$ ]]&&printf "${B}Abrindo auth...${N}\n"&&gh auth login&&break;done
[[ $skip_auth == 1 ]]&&{ printf "${B}Repositório: ${N}";read r;r=$(sed -E 's#(git@|https://)github.com[:/]##;s#\.git$##'<<<"$r");}
d=$(basename "$r");[ -d "$d" ]&&{ printf "${B}Reclonar? [y/N] ${N}";read y;[[ $y =~ ^[Yy]$ ]]&&rm -rf "$d"&&gh repo clone "$r"||cd "$d"&&git pull&&cd -; }||gh repo clone "$r"
type -p docker||{ sudo apt install -y ca-certificates curl;sudo install -m 0755 -d /etc/apt/keyrings;sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc;sudo chmod a+r /etc/apt/keyrings/docker.asc;echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable"|sudo tee /etc/apt/sources.list.d/docker.list>/dev/null;sudo apt update;sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin;sudo systemctl enable --now docker;sudo docker run hello-world;}
sudo usermod -aG docker "$USER"
grep -q '"ghcr.io"' ~/.docker/config.json 2>/dev/null&&{ printf "${B}Já autenticado. Reautenticar? [y/N] ${N}";read d;[[ $d =~ ^[Yy]$ ]]&&docker logout ghcr.io; }||true
([[ $tokendocker == 1 ]]&&echo "$t"|docker login ghcr.io -u "$u" --password-stdin)||docker login ghcr.io -u "$u"
type -p kubectl||{ sudo apt install -y apt-transport-https ca-certificates curl gnupg;sudo mkdir -p -m 755 /etc/apt/keyrings;curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key|sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg;sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg;echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"|sudo tee /etc/apt/sources.list.d/kubernetes.list>/dev/null;sudo apt update;sudo apt install -y kubectl;}
type -p fzf||sudo apt install -y fzf
[[ $nginx == 1 ]]&&type -p nginx||{ sudo apt install -y nginx certbot python3-certbot-nginx policycoreutils;sudo systemctl enable --now nginx;for p in 8080 8832;do sudo semanage port -a -t http_port_t -p tcp "$p"||sudo semanage port -m -t http_port_t -p tcp "$p";done;sudo setsebool -P httpd_can_network_connect 1;}
IFS=',' read -ra db_arr<<<"$dbs";for db in "${db_arr[@]}";do
[[ $db == mariadb-10.4 ]]&&{ sudo apt install -y mariadb-server;sudo systemctl enable --now mariadb;(type -p mysql_secure_installation && sudo mysql_secure_installation)||(type -p mysql-secure-installation && sudo mysql-secure-installation)||(printf "${B}mysql_secure_installation não encontrado. Instalar manualmente.${N}\n"); };
[[ $db == postgres-17 ]]&&{ sudo apt install -y curl ca-certificates;sudo install -d /usr/share/postgresql-common/pgdg;sudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc;sudo sh -c 'echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main">/etc/apt/sources.list.d/pgdg.list';sudo apt update;sudo apt install -y postgresql-17;sudo systemctl enable --now postgresql;}
done
[[ $node == 1 ]]&&curl -fsSL https://deb.nodesource.com/setup_18.x|sudo -E bash -&&sudo apt install -y nodejs
cd "$d"&&{ [[ -d deploy ]]&&git submodule update --init --recursive||git clone git@github.com:ApplBoy/deploy.git deploy; }&&cd deploy&&exec bash deploy.sh
printf "${B}Feito!${N}\n"
